{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  RESET: 'reset',\n  DELETE_DIGIT: 'delete',\n  EVAL: 'eval'\n};\n\nconst evaluation = function (calcExp) {\n  try {\n    let answer = eval(calcExp);\n    return answer.toString();\n  } catch {\n    return \"INVALID EXP\";\n  }\n};\n\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      return {\n        displayExp: state.displayExp + payload.dchar,\n        caclExp: state.caclExp + payload.cchar\n      };\n\n    case ACTIONS.DELETE_DIGIT:\n      return {\n        displayExp: state.displayExp.slice(0, -1),\n        caclExp: state.caclExp.slice(0, -1)\n      };\n\n    case ACTIONS.EVAL:\n      const answer = evaluation(state.caclExp);\n\n      if (answer === \"INVALID EXP\") {\n        return {\n          displayExp: \"\",\n          caclExp: \"\",\n          aboveDis: \"INVALID EXP\"\n        };\n      } else {\n        return {\n          displayExp: answer,\n          caclExp: answer,\n          aboveDis: state.displayExp\n        };\n      }\n\n    case ACTIONS.RESET:\n      return {\n        displayExp: '',\n        caclExp: '',\n        aboveDis: ''\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function useCalc() {\n  _s();\n\n  const [{\n    displayExp,\n    caclExp,\n    aboveDis\n  }, dispatch] = useReducer(reducer, {\n    displayExp: '',\n    caclExp: \"\",\n    aboveDis: ''\n  });\n  return {\n    displayExp,\n    caclExp,\n    aboveDis,\n    dispatch\n  };\n}\n\n_s(useCalc, \"Irea3t2IfR4mLJ3Cx4Hrgt/7k78=\");","map":{"version":3,"sources":["D:/Ravi-WebD/AdvCalc/src/hooks/useCalc.js"],"names":["useReducer","ACTIONS","ADD_DIGIT","RESET","DELETE_DIGIT","EVAL","evaluation","calcExp","answer","eval","toString","reducer","state","type","payload","displayExp","dchar","caclExp","cchar","slice","aboveDis","useCalc","dispatch"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,SAAS,EAAE,WADU;AAErBC,EAAAA,KAAK,EAAE,OAFc;AAGrBC,EAAAA,YAAY,EAAE,QAHO;AAIrBC,EAAAA,IAAI,EAAE;AAJe,CAAhB;;AAOP,MAAMC,UAAU,GAAG,UAAUC,OAAV,EAAmB;AACpC,MAAI;AACA,QAAIC,MAAM,GAAGC,IAAI,CAACF,OAAD,CAAjB;AACA,WAAOC,MAAM,CAACE,QAAP,EAAP;AAEH,GAJD,CAKA,MAAK;AACH,WAAO,aAAP;AACD;AACF,CATD;;AAWA,SAASC,OAAT,CAAiBC,KAAjB,QAA2C;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;;AACzC,UAAQD,IAAR;AACE,SAAKZ,OAAO,CAACC,SAAb;AACE,aAAO;AACLa,QAAAA,UAAU,EAAEH,KAAK,CAACG,UAAN,GAAmBD,OAAO,CAACE,KADlC;AAELC,QAAAA,OAAO,EAAEL,KAAK,CAACK,OAAN,GAAgBH,OAAO,CAACI;AAF5B,OAAP;;AAIF,SAAKjB,OAAO,CAACG,YAAb;AACE,aAAM;AACJW,QAAAA,UAAU,EAAEH,KAAK,CAACG,UAAN,CAAiBI,KAAjB,CAAuB,CAAvB,EAA0B,CAAC,CAA3B,CADR;AAEJF,QAAAA,OAAO,EAAEL,KAAK,CAACK,OAAN,CAAcE,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB;AAFL,OAAN;;AAKF,SAAKlB,OAAO,CAACI,IAAb;AACE,YAAMG,MAAM,GAAGF,UAAU,CAACM,KAAK,CAACK,OAAP,CAAzB;;AACA,UAAGT,MAAM,KAAK,aAAd,EAA4B;AAC1B,eAAM;AACJO,UAAAA,UAAU,EAAE,EADR;AAEJE,UAAAA,OAAO,EAAE,EAFL;AAGJG,UAAAA,QAAQ,EAAE;AAHN,SAAN;AAKD,OAND,MAOI;AACF,eAAM;AACJL,UAAAA,UAAU,EAAEP,MADR;AAEJS,UAAAA,OAAO,EAAET,MAFL;AAGJY,UAAAA,QAAQ,EAAER,KAAK,CAACG;AAHZ,SAAN;AAKD;;AAEH,SAAKd,OAAO,CAACE,KAAb;AACE,aAAO;AACLY,QAAAA,UAAU,EAAE,EADP;AAELE,QAAAA,OAAO,EAAE,EAFJ;AAGLG,QAAAA,QAAQ,EAAE;AAHL,OAAP;;AAMF;AACE,aAAOR,KAAP;AArCJ;AAuCD;;AAED,eAAe,SAASS,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAAC;AAAEN,IAAAA,UAAF;AAAaE,IAAAA,OAAb;AAAqBG,IAAAA;AAArB,GAAD,EAAkCE,QAAlC,IAA8CtB,UAAU,CAC5DW,OAD4D,EAE5D;AAAEI,IAAAA,UAAU,EAAE,EAAd;AAAiBE,IAAAA,OAAO,EAAE,EAA1B;AAA6BG,IAAAA,QAAQ,EAAE;AAAvC,GAF4D,CAA9D;AAKA,SAAO;AAAEL,IAAAA,UAAF;AAAaE,IAAAA,OAAb;AAAqBG,IAAAA,QAArB;AAAgCE,IAAAA;AAAhC,GAAP;AACD;;GAPuBD,O","sourcesContent":["import { useReducer } from 'react';\n\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  RESET: 'reset',\n  DELETE_DIGIT: 'delete',\n  EVAL: 'eval',\n};\n\nconst evaluation = function (calcExp) {\n  try {\n      let answer = eval(calcExp);\n      return answer.toString();\n    \n  }\n  catch{\n    return \"INVALID EXP\"\n  }\n};\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      return {\n        displayExp: state.displayExp + payload.dchar,\n        caclExp: state.caclExp + payload.cchar,\n      }\n    case ACTIONS.DELETE_DIGIT:\n      return{\n        displayExp: state.displayExp.slice(0, -1),\n        caclExp: state.caclExp.slice(0, -1),\n      }\n\n    case ACTIONS.EVAL:\n      const answer = evaluation(state.caclExp);\n      if(answer === \"INVALID EXP\"){\n        return{\n          displayExp: \"\",\n          caclExp: \"\",\n          aboveDis: \"INVALID EXP\",\n        }\n      }\n      else{\n        return{\n          displayExp: answer,\n          caclExp: answer,\n          aboveDis: state.displayExp,\n        }\n      }\n\n    case ACTIONS.RESET:\n      return {\n        displayExp: '',\n        caclExp: '',\n        aboveDis: '',\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function useCalc() {\n  const [{ displayExp,caclExp,aboveDis }, dispatch] = useReducer(\n    reducer,\n    { displayExp: '',caclExp: \"\",aboveDis: ''}\n  );\n\n  return { displayExp,caclExp,aboveDis , dispatch };\n}\n"]},"metadata":{},"sourceType":"module"}